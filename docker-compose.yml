version: '3'
services:
  database:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user_management
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U database -d user_management'"] 
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - your-network

  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    env_file:
      - .env
    command: ["start_app"]
    entrypoint: ["/entrypoint.sh"]
    environment:
      - PYTHONPATH=/app
    depends_on:
      database:
        condition: service_healthy
    networks:
      - your-network

  
  flask-app-migration:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    command: ["db_migration"]
    entrypoint: ["/entrypoint.sh"]
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    depends_on:
      database:
        condition: service_healthy
    networks:
      - your-network

networks:
  your-network:
     driver: bridge